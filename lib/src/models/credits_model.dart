// Generated by https://quicktype.io

class Credit {

  List<Credits> credits = [];

  
  Credit.fromjsonList( List<dynamic> jsonList ) {

    if ( jsonList == null ) return;

    jsonList.forEach( (item) {
      
      final credit = Credits.fromJsonMap(item);
      credits.add(credit);

    });


  }

}



class Credits {
  bool adult;
  String backdropPath;
  List<int> genreIds;
  int id;
  String originalLanguage;
  String originalTitle;
  String overview;
  String posterPath;
  String releaseDate;
  String title;
  bool video;
  double voteAverage;
  int voteCount;
  double popularity;
  String character;
  String creditId;
  int order;
  Department department;
  String job;

  Credits({
    this.adult,
    this.backdropPath,
    this.genreIds,
    this.id,
    this.originalLanguage,
    this.originalTitle,
    this.overview,
    this.posterPath,
    this.releaseDate,
    this.title,
    this.video,
    this.voteAverage,
    this.voteCount,
    this.popularity,
    this.character,
    this.creditId,
    this.order,
    this.department,
    this.job,
  });

  Credits.fromJsonMap( Map<String, dynamic> json ) {
    
    adult            = json['adult'];
    backdropPath     = json['backdrop_path'];
    genreIds         = json['genre_ids'].cast<int>();
    id               = json['id'];
    originalLanguage = json['original_language'];
    originalTitle    = json['original_title'];
    overview         = json['overview'];
    posterPath       = json['poster_path'];
    releaseDate      = json['release_date'];
    title            = json['title'];
    video            = json['video'];
    voteAverage      = json['vote_average'] / 1;
    voteCount        = json['vote_count'];
    popularity       = json['popularity'] / 1;
    character        = json['character'];
    creditId         = json['credit_id'];
    order            = json['order'];
    department       = json['department'];
    job              = json['job'];

  }

   getCreditsImg() {

    if ( posterPath == null ) {
      return 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';
    } else {
      return 'https://image.tmdb.org/t/p/w500/$posterPath';
    }
    
  }


}

enum Department { DIRECTING, PRODUCTION, WRITING }

enum OriginalLanguage { EN, FR }
